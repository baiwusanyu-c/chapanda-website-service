name: Deploy to Aliyun

# 仅在推送到 main 分支时触发
on:
  push:
    branches:
      - master  # 当推送到 main 分支时触发 workflow
  workflow_dispatch: # 允许手动触发，并可以指定分支
    inputs:
      branch:
        description: 'Branch to release from'
        required: true
        default: 'master'  # 默认使用 master 分支
        type: string
# 设置执行的工作
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run build

      - name: Create env files
        run: |
            ls
            mkdir -p dist/env
            echo 'MYSQL_ROOT_PASSWORD=${{secrets.MYSQL_ROOT_PASSWORD}}' >> dist/env/.env
            echo 'MYSQL_ROOT_USER=${{secrets.MYSQL_ROOT_USER}}' >> dist/env/.env
            echo 'MYSQL_SERVER_HOST=${{secrets.MYSQL_SERVER_HOST}}' >> dist/env/.env
            echo 'REDIS_SERVER_HOST=${{secrets.REDIS_SERVER_HOST}}' >> dist/env/.env
            echo 'REDIS_ROOT_PASSWORD=${{secrets.REDIS_ROOT_PASSWORD}}' >> dist/env/.env
            echo 'MINIO_SERVER_HOST=${{secrets.MINIO_SERVER_HOST}}' >> dist/env/.env
            echo 'MINIO_SERVER_ACCESS=${{secrets.MINIO_SERVER_ACCESS}}' >> dist/env/.env
            echo 'MINIO_SERVER_SECRET=${{secrets.MINIO_SERVER_SECRET}}' >> dist/env/.env
            echo 'MINIO_SERVER_BUKET=${{secrets.MINIO_SERVER_BUKET}}' >> dist/env/.env
            if [ ! -f dist/env/.env ]; then
              echo '::error::.env 文件未生成'
              exit 1
            fi
      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Rsync deployment files
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          rsync -avz --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --rsync-path="sudo rsync" \
            ./ $SSH_USER@$SSH_HOST:~/chapanda/service/chapanda-website-service/

      - name: Set execute permissions
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          ssh $SSH_USER@$SSH_HOST "
            cd ~/chapanda/service/chapanda-website-service
            chmod +x scripts/setup.sh
          "

