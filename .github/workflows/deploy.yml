name: Deploy to Aliyun

# 仅在推送到 main 分支时触发
on:
  push:
    branches:
      - master  # 当推送到 main 分支时触发 workflow
  workflow_dispatch: # 允许手动触发，并可以指定分支
    inputs:
      branch:
        description: 'Branch to release from'
        required: true
        default: 'master'  # 默认使用 master 分支
        type: string
# 设置执行的工作
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: pnpm

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          #强制创建 .ssh 目录（-p 防止目录不存在报错）
          #将私钥内容写入文件
          #必须操作！SSH 协议要求私钥不可被其他用户读取,600 = 用户读写，其他无权限
          # 自动记录服务器指纹到信任列表,避免首次连接时的 "Are you sure?" 提示阻断流程
          # 通过 SSH 连接服务器, 进入项目目录，清空当前目录后，拉取最新代码并安装依赖后执行 setup.sh
          # bash ./scripts/setup.sh
        run: |
            mkdir -p ~/.ssh
            echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
            ssh $SSH_USER@$SSH_HOST "
            cd /chapanda/service
            rm -rf ./chapanda-website-service || true
            git clone git@github.com:baiwusanyu-c/chapanda-website-service.git ./chapanda-website-service
            cd ./chapanda-website-service
            npm install"
